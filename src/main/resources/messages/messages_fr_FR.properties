#login module
login.badCredentials = Nom d'utilisateur ou mot de passe incorrect
login.required = Le login est un champ obligatoire
password.required = Le mot de passe est un champ obligatoire
token.invalid = Jeton invalide ou expir\u00E9
login.401 = Authentification requise, jeton obligatoire
login.403 = Acc\u00E8s refus\u00E9 , vous n'avez pas les droits d'acc\u00E8s

#####change password
password.old.invalid = Ancien mot de passe invalide
password.invalid.length = Le mot de passe doit comporter au moins 6 caract\u00E8res et contenir au moins une lettre en minuscule, une lettre en majuscule , un chiffre et un caract\u00E8re sp\u00E9cial.
password.confirm.invalid = Confirmation de mot de passe invalide
password.same.old = Le nouveau mot de passe doit \u00EAtre diff\u00E9rent du pr\u00E9c\u00E9dent
oldPassword = Ancien mot de passe
expiredPassword = Mot de passe expir\u00E9


#entityNotFoundException
problemDetail.exception.entityNotFound = Entit\u00E9 {0} introuvable
entity.notFound.id = Entit\u00E9 introuvable avec l'ID {0}



#########Insured Module##########################
insured.name.already.exists = Le risque {0} existe d\u00E9j\u00E0
NotBlank = {0} est obligatoire
NotNull = {0} ne doit pas \u00EAtre nul

insuredDto.name = Nom du risque

#####GobalException#######
error.500 = Erreur technique, veuillez contacter l'administrateur
error.field.not.found = Champ {0} non trouv\u00E9
error.version.changed = la version de l'entit\u00E9 a \u00E9t\u00E9 modifi\u00E9e par un autre utilisateur . veuillez recharger la page
error.user.not.found = Utilisateur introuvable
error.invalid.access.level = Niveau d'acc\u00E8s invalide, Vueillez contacter l'administrateur 
problemDetail.org.springframework.http.converter.HttpMessageNotReadableException = Message HTTP non lisible
#problemDetail.org.springframework.web.bind.MethodArgumentNotValidException= argument de m\u00E9thode non valide

#treaty contract detail#####
treatyContractDetailDto.expiry.invalid = La date d'expiration doit \u00EAtre sup\u00E9rieure \u00E0 la date d'effet
treatyContractDetailDto.underwritingYear.invalid = L'ann\u00E9e de souscription doit \u00EAtre \u00E9gale \u00E0 l'ann\u00E9e de la date d'effet

engagement3Dto.lastAdjut=La date du dernier ajustement doit \u00EAtre inf\u00E9rieure \u00E0 la date du prochain ajustement
engagement3Dto.nextAdjst.invalid= La date du prochain ajustement doit \u00EAtre sup\u00E9rieure ou \u00E9gale \u00E0 la date du dernier ajustement + la frequence d'ajustement
engagement3Dto.premiumEstimatedTty.invalid= La prime estim\u00E9e TTY doit \u00EAtre inf\u00E9rieure \u00E0 la prime objet * taux de prime /100
engagement3Dto.minPremiumRate.invalid= Le taux de prime minimum doit \u00EAtre inf\u00E9rieur ou \u00E9gal au taux de prime maximum
## engagement2DTo
engagement2DTo.liability100.invalid= L'engagement max. du Trait\u00E9  doit \u00EAtre \u00E9gal \u00E0 plein de conservation * nombre de plein reassur\u00E9 +1

####treaty validator messages .
treatycontractValidator.arrangementType.invalid= Le type d'arrangement n'est pas valide
treatycontractValidator.branches.invalid = Les Branches {0} do not belong to the profit center
#####Participation Module#######
error.participant.total = Le total des participations doit \u00EAtre \u00E9gal \u00E0 100%
error.participant.securities = participant { 0 } : le total des securit\u00E9s doit etre \u00E9gal au pourcentage de participation
error.close.treaty.not.placed = trait\u00E9 non plac\u00E9 , impossible de le cloturer

jakarta.validation.constraints.NotNull.message         = ne doit pas \u00EAtre null
#policyDetail
PolicyDetailDto.expiry.invalid = La date d'expiration doit \u00EAtre sup\u00E9rieure \u00E0 la date d'effet
PolicyDetailDto.underwritingYear.invalid = L'ann\u00E9e de souscription doit \u00EAtre \u00E9gale \u00E0 l'ann\u00E9e de la date d'effet
#engagement
DecimalMin.policyEngagementDto.premiumRate = Le taux de prime doit \u00EAtre sup\u00E9rieur \u00E0 {0}
DecimalMax.policyEngagementDto.premiumRate== Le taux de prime doit \u00EAtre inf\u00E9rieur \u00E0 {0} 
NotNull.policyEngagementDto.premiumRate=Le Taux de prime est obligatoire

DecimalMin.policyEngagementDto.premiumEstimated = La prime estim\u00E9e doit \u00EAtre sup\u00E9rieure \u00E0 {0}
DecimalMax.policyEngagementDto.premiumEstimated = La prime estim\u00E9e doit \u00EAtre inf\u00E9rieure \u00E0 {0}

NotNull.policyEngagementDto.liability100 = Le capital 100% est obligatoire
DecimalMin.policyEngagementDto.liability100 = Le capital 100% doit \u00EAtre sup\u00E9rieur \u00E0 {0}

DecimalMin.policyEngagementDto.companyShare  =La part totale accept\u00E9e par RMA doit \u00EAtre sup\u00E9rieure \u00E0 {0}
DecimalMax.policyEngagementDto.companyShare  =La part totale accept\u00E9e par RMA doit \u00EAtre inf\u00E9rieure \u00E0 {0}

DecimalMin.policyEngagementDto.facShare = La part vers\u00E9e En facultative doit \u00EAtre sup\u00E9rieure ou egal  \u00E0 0
policyEngagementDto.facShare.invalid = La part vers\u00E9e En facultative doit \u00EAtre inf\u00E9rieure ou \u00E9gale \u00E0 la part totale accept\u00E9e par RMA

policyEngagementDto.premiumEstimated.invalid = "La prime brute estim\u00E9e doit \u00EAtre inf\u00E9rieure  au min(capital \u00E0 100%, LCI) 
policyEngagementDto.lci100.invalid = "La limite contractuelle d'indemnit\u00E9 doit \u00EAtre inf\u00E9rieure ou  \u00E9gale au capital \u00E0 100%

#PolicyDecision
policyDecisionDto.comment.invalid =Veuillez saisir un commentaire



